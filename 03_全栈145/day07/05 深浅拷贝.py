import copy

lst1 = ["金毛狮王", "紫杉龙王", "青翼蝠王", "白眉鹰王", ['张无忌', '赵敏', '周芷若']]
# lst2 = lst1   1 和 2 同时指向一个列表，指针值相同

# lst2 = lst1[:]  # 浅拷贝
# lst2 = lst1.copy()  # 浅拷贝
# 产生了一个新列表， 不会同时指向同一地址

lst2 = copy.deepcopy(lst1)  # 深拷贝


# lst1.append("杨逍")

lst1[4].append("小昭")
'''
   使用浅拷贝一定会产生新对象，
   浅拷贝不会拷贝内部列表(可迭代对象)，
   产生的新对象内部列表与原对象内部列表指针相同
'''

print(lst1)
print(lst2)

# 浅拷贝
# print(id(lst1[4]))
# print(id(lst2[4]))

'''
   深拷贝会复制与对象相关的所有东西
   想用深拷贝，须引进模块
   会拷贝内部列表(可迭代对象)
   产生的新对象内部列表与原对象内部列表指针不同
   此时完全是两个对象
'''


# 赋值  没有创建新对象
# 浅拷贝 只拷贝第一层内容  切片  copy
# 深拷贝 全部拷贝   copy模块
